---
title: Wordscores
weight: 20
draft: false
---

Wordscores is a scaling model for estimating the positions (mostly of political actors) for dimensions that are specified a priori. Wordscores was introduced in Laver, Benoit and Garry (2003) and is widely used among political scientists.

```{r message=FALSE}
require(quanteda)
require(quanteda.corpora)
```

Training a Wordscores model requires reference scores for texts whose policy positions on well-defined a priori dimensions are "known". Afterwards, Wordscores estimates the positions for the remaining "virgin" texts.

We use manifestos of the 2013 and 2017 German federal elections. For the 2013 elections we assign the average expert evaluations from the 2014 [Chapel Hill Expert Survey](https://www.chesdata.eu/) for the five major parties, and predict the party positions for the 2017 manifestos.

```{r eval=FALSE}
corp_ger <- download(url = 'https://www.dropbox.com/s/uysdoep4unfz3zp/data_corpus_germanifestos.rds?dl=1')
```

```{r include=FALSE}
# This code is only for website generation
corp_ger <- readRDS("../data/data_corpus_germanifestos.rds")
```

```{r}
summary(corp_ger)
```

Now we can apply the Wordscores algorithm to a document-feature matrix.

```{r}
dfmat_ger <- dfm(corp_ger, remove = stopwords("de"), remove_punct = TRUE)
tmod_ws <- textmodel_wordscores(dfmat_ger, y = docvars(corp_ger, "ref_score"), smooth = 1)
summary(tmod_ws)
```

Next, we predict the Wordscores for the unknown virgin texts.

```{r}
pred_ws <- predict(tmod_ws, se.fit = TRUE, newdata = dfmat_ger)
```

Finally, we can plot the fitted scaling model using **quanteda**'s `textplot_scale1d()` function.

```{r}
textplot_scale1d(pred_ws)
```


{{% notice info %}}
If you want to learn more about Wordscores, see:  
Laver, Michael, Kenneth R Benoit, and John Garry. 2003. "Extracting Policy Positions From Political Texts Using Words as Data." _American Political Science Review_ 97(2): 311-331.  
Lowe, Will. 2008. "Understanding Wordscores." _Political Analysis_ 16(4): 356-371.
{{% /notice%}}
